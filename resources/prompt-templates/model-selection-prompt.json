{
  "_type": "prompt",
  "input_variables": [
    "user_input",
    "models",
    "task",
    "context"
  ],
  "template": "Given the user request, the AI assistant helps the user to select a suitable model from a list of models to process the user request. The assistant should focus more on the description of the model and find the model that has the most potential to solve requests. Also, prefer models with local inference endpoints for speed and stability.\n<im_start>user\n{user_input}\n<im_end>\n<im_start>assistant\nTask: {task}\nContext: {context}\n<im_end>\n<im_start>user\nPlease choose the most suitable model from models for the task {task}. \n\n model list: {models} \n\n The selection should prioritize the user input as the highest importance, ensuring the chosen model can best fulfill the user input. Additionally, consider the context provided, which includes any additional information necessary to complete the task. If the context contains information irrelevant to the task, you may ignore it. Use these details to determine which model is best suited for the task. The output must be in a strict JSON format:\n{{\n\"id\": \"id\",\n\"reason\": \"your detailed reasons for the choice\",\n\"task\": \"task name\",\n\"input_args\": \"The \"inputs\" value in the model list describes the input arguments for that model. Generate an input value for each argument based on that description.\"\n}}\nIf 'input_args' cannot be generated with the given information, fill the value of the argument that cannot be generated with \"more information needed,\" and add an \"error\" property to the input_args. The value of the \"error\" property should explain why you couldn't generate {{the names of the arguments that could not be generated}} and what additional information is needed to generate those values.\nIMPORTANT: For the input_args field, refer to the selected model's metadata information \"inputs\" and format it accordingly. Each model may have different requirements for input_args.\nNEVER attach any other sentences, just JSON. The output you return must strictly adhere to JSON syntax.\n<im_end>\n<im_start>assistant"
}